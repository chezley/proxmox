---
- name: Install VM on proxmox server
  hosts: all
  vars_files:
    - secrets.yml
  vars:
    ssh_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
  tasks:

    - name: Download rustscan
      ansible.builtin.get_url:
        url: https://github.com/RustScan/RustScan/releases/download/2.3.0/rustscan_2.3.0_amd64.deb
        dest: /root/rustscan_2.3.0_amd64.deb
        mode: '0644'

    - name: Install rustscan
      ansible.builtin.apt:
        deb: /root/rustscan_2.3.0_amd64.deb

    - name: create VM  
      register: create_vm
      loop: "{{ group_names }}"
      community.general.proxmox_kvm:
        api_user: "{{ proxmox_api.user }}"
        api_token_id: "{{ proxmox_api.token_id }}"
        api_token_secret: "{{ proxmox_api.password }}"
        api_host: "{{ proxmox_api.host }}"
        clone: chezznutt
        name: "{{ item }}"
        node: chez
        full: false

    - name: Sleep 20 seconds
      when: create_vm is changed
      ansible.builtin.pause:
        seconds: 20

    - name: start VM
      loop: "{{ group_names }}"
      community.general.proxmox_kvm:
        api_user: "{{ proxmox_api.user }}"
        api_token_id: "{{ proxmox_api.token_id }}"
        api_token_secret: "{{ proxmox_api.password }}"
        api_host: "{{ proxmox_api.host }}"
        name: "{{ item }}"
        node: chez
        state: started

    - name: Update VM | IP
      loop: "{{ group_names }}"
      when: create_vm is changed
      community.general.proxmox_kvm:
        api_user: "{{ proxmox_api.user }}"
        api_token_id: "{{ proxmox_api.token_id }}"
        api_token_secret: "{{ proxmox_api.password }}"
        api_host: "{{ proxmox_api.host }}"
        name: "{{ item }}"
        ipconfig:
          ipconfig0: 'ip=dhcp'
        sshkeys: "{{ ssh_key }}"
        node: chez
        update: yes
        timeout: 500

    - name: Sleep 10 seconds
      when: create_vm is changed
      ansible.builtin.pause:
        seconds: 10

    - name: restart VM
      loop: "{{ group_names }}"
      when: create_vm is changed
      community.general.proxmox_kvm:
        api_user: "{{ proxmox_api.user }}"
        api_token_id: "{{ proxmox_api.token_id }}"
        api_token_secret: "{{ proxmox_api.password }}"
        api_host: "{{ proxmox_api.host }}"
        name: "{{ item }}"
        node: chez
        state: restarted

    - name: Sleep 30 seconds
      when: create_vm is changed
      ansible.builtin.pause:
        seconds: 30 

    - name: Get vmid
      loop: "{{ group_names }}"
      ansible.builtin.shell: qm list | grep "{{ item }}" | awk '{ print $1 }'
      register: thevmid

    - name: Vmid in list
      ansible.builtin.set_fact:
        vmid_list: "{{ thevmid.results | map(attribute='stdout') | list }}"

    - name: Show vmid
      loop: "{{ vmid_list }}"
      ansible.builtin.debug:
        var: "{{ item }}"

    - name: Get IP
      loop: "{{ group_names }}"
      ansible.builtin.shell: rustscan -a "{{ item }}" | grep open | head -n1 | awk '{ print $NF }'
      register: theip

    - name: IP in list
      ansible.builtin.set_fact:
        ip_list: "{{ theip.results | map(attribute='stdout') | list }}"

    - name: Show IP
      loop: "{{ ip_list }}"
      ansible.builtin.debug:
        var: "{{ item }}"

    - name: Discord Notification
      loop: "{{ group_names | zip(ip_list) | list }}"
      loop_control:
        index_var: i
      when: theip is changed and create_vm is changed
      community.general.discord:
        webhook_id: "{{ discord.id }}"
        webhook_token: "{{ discord.token }}"
        embeds:
          - title: "Server IP"
            description: |
              `Server`: "{{ item[0] }}"
              `IP ADDRESS`: "{{ item[1] }}"
            footer:
              text: "Provided by Ansible"
            image:
              url: "https://docs.ansible.com/ansible/latest/_static/images/logo_invert.png"
